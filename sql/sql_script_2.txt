CREATE DATABASE IF NOT EXISTS forum;
USE forum;

CREATE TABLE categories
(
    id          INT AUTO_INCREMENT
        PRIMARY KEY,
    name        VARCHAR(45)          NOT NULL,
    description VARCHAR(255)         NULL,
    hidden      TINYINT(1) DEFAULT 0 NOT NULL,
    CONSTRAINT name_UNIQUE
        UNIQUE (name)
);

CREATE TABLE users
(
    id            INT AUTO_INCREMENT
        PRIMARY KEY,
    username      VARCHAR(45)               NOT NULL,
    password      VARCHAR(255)              NOT NULL,
    email         VARCHAR(45)               NOT NULL,
    birthday      DATE                      NOT NULL,
    avatar        TINYTEXT                  NULL,
    admin         TINYINT DEFAULT 0         NOT NULL,
    creation_date DATE    DEFAULT CURDATE() NULL,
    CONSTRAINT email_UNIQUE
        UNIQUE (email),
    CONSTRAINT username_UNIQUE
        UNIQUE (username)
);

CREATE TABLE category_permissions
(
    id          INT AUTO_INCREMENT,
    type        TINYINT DEFAULT 0 NOT NULL,
    category_id INT               NOT NULL,
    user_id     INT               NOT NULL,
    PRIMARY KEY (id, category_id, user_id),
    CONSTRAINT fk_category_permissions_categories1
        FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT fk_category_permissions_users1
        FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE INDEX fk_category_permissions_categories1_idx
    ON category_permissions (category_id);

CREATE INDEX fk_category_permissions_users1_idx
    ON category_permissions (user_id);

CREATE TABLE conversations
(
    id           INT AUTO_INCREMENT,
    date         DATETIME DEFAULT CURRENT_TIMESTAMP() NOT NULL,
    initiator_id INT                                  NOT NULL,
    receiver_id  INT                                  NOT NULL,
    PRIMARY KEY (id, initiator_id, receiver_id),
    CONSTRAINT fk_conversations_users1
        FOREIGN KEY (initiator_id) REFERENCES users (id),
    CONSTRAINT fk_conversations_users2
        FOREIGN KEY (receiver_id) REFERENCES users (id)
);

CREATE INDEX fk_conversations_users1_idx
    ON conversations (initiator_id);

CREATE INDEX fk_conversations_users2_idx
    ON conversations (receiver_id);

CREATE TABLE messages
(
    id              INT AUTO_INCREMENT,
    content         VARCHAR(255)                         NOT NULL,
    date            DATETIME DEFAULT CURRENT_TIMESTAMP() NOT NULL,
    conversation_id INT                                  NOT NULL,
    sender_id       INT                                  NOT NULL,
    receiver_id     INT                                  NOT NULL,
    PRIMARY KEY (id, conversation_id, sender_id),
    CONSTRAINT fk_messages_conversations1
        FOREIGN KEY (conversation_id) REFERENCES conversations (id)
            ON DELETE CASCADE,
    CONSTRAINT fk_messages_users1
        FOREIGN KEY (sender_id) REFERENCES users (id),
    CONSTRAINT fk_messages_users2
        FOREIGN KEY (receiver_id) REFERENCES users (id)
);

CREATE INDEX fk_messages_conversations1_idx
    ON messages (conversation_id);

CREATE INDEX fk_messages_users1_idx
    ON messages (sender_id);

CREATE INDEX fk_messages_users2_idx
    ON messages (receiver_id);

CREATE TABLE topics
(
    id          INT AUTO_INCREMENT,
    name        VARCHAR(45)                  NOT NULL,
    content     MEDIUMTEXT                   NOT NULL,
    date        DATE       DEFAULT CURDATE() NOT NULL,
    category_id INT                          NOT NULL,
    user_id     INT                          NOT NULL,
    locked      TINYINT(1) DEFAULT 0         NULL,
    PRIMARY KEY (id, category_id, user_id),
    CONSTRAINT fk_topics_categories
        FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT fk_topics_users1
        FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE replies
(
    id       INT AUTO_INCREMENT,
    content  TEXT                   NOT NULL,
    date     DATE DEFAULT CURDATE() NOT NULL,
    topic_id INT                    NOT NULL,
    user_id  INT                    NOT NULL,
    PRIMARY KEY (id, topic_id, user_id),
    CONSTRAINT fk_replies_topics1
        FOREIGN KEY (topic_id) REFERENCES topics (id),
    CONSTRAINT fk_replies_users1
        FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE INDEX fk_replies_topics1_idx
    ON replies (topic_id);

CREATE INDEX fk_replies_users1_idx
    ON replies (user_id);

CREATE INDEX fk_topics_categories_idx
    ON topics (category_id);

CREATE INDEX fk_topics_users1_idx
    ON topics (user_id);

CREATE TABLE votes
(
    id       INT AUTO_INCREMENT,
    type     TINYINT NOT NULL,
    reply_id INT     NOT NULL,
    user_id  INT     NOT NULL,
    PRIMARY KEY (id, reply_id, user_id),
    CONSTRAINT fk_votes_replies1
        FOREIGN KEY (reply_id) REFERENCES replies (id),
    CONSTRAINT fk_votes_users1
        FOREIGN KEY (user_id) REFERENCES users (id)
            ON DELETE CASCADE
);

CREATE INDEX fk_votes_replies1_idx
    ON votes (reply_id);

CREATE INDEX fk_votes_users1_idx
    ON votes (user_id);